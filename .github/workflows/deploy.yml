# üìå Deploy Django App to Azure Web App
# Docs: https://github.com/Azure/webapps-deploy

name: Build and Deploy Django Backend to Azure

on:
  push:
    branches:
      - main  # ‚úÖ Runs on push to main
  workflow_dispatch:  # ‚úÖ Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # ‚úÖ Required for actions/checkout

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Debug File Paths
        run: ls -R

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set Azure Identity Variables
        run: |
          echo "AZURE_CLIENT_ID=2d10c108-a0c1-474f-88cf-543cffca9dd7" >> $GITHUB_ENV
          echo "AZURE_TENANT_ID=91828c1e-01c5-42c9-9ad6-92e40d71f956" >> $GITHUB_ENV
          echo "AZURE_SUBSCRIPTION_ID=53b0c4e7-0c78-4b57-9b1a-1c5ac8d9a0a1" >> $GITHUB_ENV

      - name: Install system dependencies
        run: sudo apt-get install -y python3-venv python3-dev

      - name: Create Virtual Environment
        working-directory: backend
        run: |
          python -m venv antenv
          source antenv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set Python Path
        run: echo "PYTHONPATH=${{ github.workspace }}/backend" >> $GITHUB_ENV

      - name: Debug Manage.py Path
        run: ls -R ${{ github.workspace }}/backend/fincrest

      - name: Verify Manage.py Exists
        run: |
          if [ ! -f backend/fincrest/manage.py ]; then
            echo "‚ùå Error: backend/fincrest/manage.py not found!"
            exit 1
          fi

      - name: Run Migrations
        working-directory: backend/fincrest
        env:
          DJANGO_SETTINGS_MODULE: fincrest.settings.production  # ‚úÖ Set correct settings
        run: |
          source ${{ github.workspace }}/backend/antenv/bin/activate
          python manage.py migrate --noinput

      - name: Collect Static Files
        working-directory: backend/fincrest
        env:
          DJANGO_SETTINGS_MODULE: fincrest.settings.production
        run: |
          source ${{ github.workspace }}/backend/antenv/bin/activate
          python manage.py collectstatic --noinput

      - name: Zip Artifact for Deployment
        run: |
          cd backend
          zip -r ../release.zip .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # ‚úÖ Required for JWT authentication
      contents: read

    steps:
      - name: Download Artifact from Build Job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip Artifact
        run: unzip release.zip -d backend

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Enable Azure Web App Managed Identity
        run: |
          az webapp identity assign --name fincrest-backend --resource-group FinCrestResourceGroup

      - name: Retrieve Key Vault Secrets and Set App Config
        run: |
          az webapp config appsettings set --name fincrest-backend --resource-group FinCrestResourceGroup --settings \
          DB-NAME=@Microsoft.KeyVault(SecretUri=https://fcvauult.vault.azure.net/secrets/DB-NAME/) \
          DB-USER=@Microsoft.KeyVault(SecretUri=https://fcvauult.vault.azure.net/secrets/DB-USER/) \
          DB-PASSWORD=@Microsoft.KeyVault(SecretUri=https://fcvauult.vault.azure.net/secrets/DB-PASSWORD/) \
          DB-HOST=@Microsoft.KeyVault(SecretUri=https://fcvauult.vault.azure.net/secrets/DB-HOST/) \
          DJANGO-SECRET-KEY=@Microsoft.KeyVault(SecretUri=https://fcvauult.vault.azure.net/secrets/DJANGO-SECRET-KEY/)

      - name: Set Correct Django Startup Command
        run: |
          az webapp config set --name fincrest-backend \
            --resource-group FinCrestResourceGroup \
            --startup-file "source /home/site/wwwroot/antenv/bin/activate && gunicorn --bind=0.0.0.0:8000 fincrest.wsgi:application"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'fincrest-backend'
          package: backend/fincrest
